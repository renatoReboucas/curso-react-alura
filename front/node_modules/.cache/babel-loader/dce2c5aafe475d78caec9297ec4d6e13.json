{"ast":null,"code":"var _jsxFileName = \"/Users/renatoreboucas/Projetos/react/react-alura/src/components/Formulario.jsx\";\nimport React, { useState } from 'react';\nimport FormValidator from '../FormValidator';\nimport validator from 'validator'; // import { Container } from './styles';\n\nexport default function Formulario(props) {\n  // this.validator = new FormValidator()\n  const validator = new FormValidator([{\n    campo: 'nome',\n    metodo: 'isEmpty',\n    validoQuando: false,\n    mensagem: 'Entre com um nome'\n  }, {\n    campo: 'livro',\n    metodo: 'isEmpty',\n    validoQuando: false,\n    mensagem: 'Entre com um livro'\n  }, {\n    campo: 'preco',\n    metodo: 'isInt',\n    args: [{\n      min: 0,\n      max: 99999\n    }],\n    validoQuando: true,\n    mensagem: 'Entre com um valor numerico'\n  }]);\n  const [nome, setNome] = useState('');\n  const [livro, setLivro] = useState('');\n  const [preco, setPreco] = useState('');\n\n  function submitForm() {\n    const data = {\n      nome,\n      livro,\n      preco,\n      validacao: validator.valido()\n    };\n\n    if (validacao.isValid) {\n      props.escutadorSubmit(data);\n      setPreco('');\n      setLivro('');\n      setNome('');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-field\",\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"validate\",\n    id: \"nome\",\n    type: \"text\",\n    name: \"nome\",\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-field\",\n    htmlFor: \"livro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Livro\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"validate\",\n    id: \"livro\",\n    type: \"text\",\n    name: \"livro\",\n    value: livro,\n    onChange: e => setLivro(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-field\",\n    htmlFor: \"preco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Pre\\xE7o\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"validate\",\n    id: \"preco\",\n    type: \"text\",\n    name: \"preco\",\n    value: preco,\n    onChange: e => setPreco(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col 4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitForm,\n    type: \"button\",\n    className: \"waves-effect waves-light indigo lighten-2 btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Salvar\")));\n}","map":{"version":3,"sources":["/Users/renatoreboucas/Projetos/react/react-alura/src/components/Formulario.jsx"],"names":["React","useState","FormValidator","validator","Formulario","props","campo","metodo","validoQuando","mensagem","args","min","max","nome","setNome","livro","setLivro","preco","setPreco","submitForm","data","validacao","valido","isValid","escutadorSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\n\nimport FormValidator from '../FormValidator'\nimport validator from 'validator';\n// import { Container } from './styles';\n\n\nexport default function Formulario(props) {\n\n  // this.validator = new FormValidator()\n  const validator = new FormValidator([\n    {\n      campo: 'nome',\n      metodo: 'isEmpty',\n      validoQuando: false,\n      mensagem: 'Entre com um nome'\n    },\n    {\n      campo: 'livro',\n      metodo: 'isEmpty',\n      validoQuando: false,\n      mensagem: 'Entre com um livro'\n    },\n    {\n      campo: 'preco',\n      metodo: 'isInt',\n      args: [{ min: 0, max: 99999 }],\n      validoQuando: true,\n      mensagem: 'Entre com um valor numerico'\n    },\n  ])\n  \n  const [nome, setNome] = useState('')\n  const [livro, setLivro] = useState('')\n  const [preco, setPreco] = useState('')\n\n\n  function submitForm(){\n    const data = {\n      nome,\n      livro,\n      preco,\n      validacao: validator.valido()\n    }\n\n    if(validacao.isValid){\n      props.escutadorSubmit(data)\n      setPreco('')\n      setLivro('')\n      setNome('')\n    }\n\n  }\n\n  return (\n    <form>\n      <div className=\"row\">\n        <div className=\"input-field col 4\">\n          <label className=\"input-field\" htmlFor=\"nome\">Nome</label>\n          <input\n            className=\"validate\"\n            id=\"nome\"\n            type=\"text\"\n            name=\"nome\"\n            value={nome}\n            onChange={e => setNome(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field col 4\">\n          <label className=\"input-field\" htmlFor=\"livro\">Livro</label>\n          <input\n            className=\"validate\"\n            id=\"livro\"\n            type=\"text\"\n            name=\"livro\"\n            value={livro}\n            onChange={e => setLivro(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field col 4\">\n          <label className=\"input-field\" htmlFor=\"preco\">Pre√ßo</label>\n          <input\n            className=\"validate\"\n            id=\"preco\"\n            type=\"text\"\n            name=\"preco\"\n            value={preco}\n            onChange={e => setPreco(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"input-field col 4\">\n        <button onClick={submitForm} type=\"button\" className=\"waves-effect waves-light indigo lighten-2 btn\">Salvar</button>\n      </div>\n    </form>\n\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}